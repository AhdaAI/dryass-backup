name: Build and Release

on:
  push:
    paths:
      - "pyproject.toml"
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Wine and dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y wine64 wine32 gcc-mingw-w64

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: poetry install --no-root

      - name: Build with PyInstaller
        run: |
          poetry run pip install pyinstaller
          poetry run pip install pywin32-ctypes
          poetry run pyinstaller --onefile --name dryass \
            --windowed \
            --target-arch x86_64 \
            main.py

      - name: Create ZIP archive
        run: |
          cd dist
          zip backup_cli_program-0.1.1.tar.gz pyinstaller/win_amd64/dryass.exe
          cd ..

      - name: Get version from pyproject.toml
        id: get_version
        run: |
          version=$(grep -m1 'version = ' pyproject.toml | sed 's/.*version = "\([^"]*\)".*/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag "v${{ steps.get_version.outputs.version }}"
          git push origin "v${{ steps.get_version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.get_version.outputs.version }}"
          files: |
            dist/dryass.exe
            dist/dryass-windows.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
